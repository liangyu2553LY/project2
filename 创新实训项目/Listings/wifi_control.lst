C51 COMPILER V9.56.0.0   WIFI_CONTROL                                                      06/02/2022 20:06:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE WIFI_CONTROL
OBJECT MODULE PLACED IN .\Objects\wifi_control.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE wifi_control.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\wifi_control.lst) TABS(2) OBJECT(.\Objects\wifi_control.obj)

line level    source

   1          #include <delay.h>
   2          #include <wifi_control.h>
   3          #include <UART.H>
   4          #include <smg.c>
   5          #include <ds18b20.h>
   6          #define u8 unsigned char
   7          #define u16 unsigned int
   8          //ESP8266 WIFI发送数据到APP
   9          //pbuf：数据
  10          void ESP8266_SendData(unsigned char *pbuf)
  11          {
  12   1        ESP8266_SendCmd("AT+CIPSEND=0,16");
  13   1        delay_ms(10);
  14   1        while(*pbuf!='\0') //遇到空格跳出循环 
  15   1        {
  16   2          UART_SendData(*pbuf);
  17   2          delay_10us(5);
  18   2          pbuf++; 
  19   2        }
  20   1        UART_SendData('\n');//换行  
  21   1      //  delay_ms(10);
  22   1      }
  23          
  24          //ESP8266 WIFI发送AT指令
  25          //pbuf：AT指令，字符串格式，如："AT"
  26          void ESP8266_SendCmd(unsigned char *pbuf)
  27          {
  28   1        while(*pbuf!='\0') //遇到空格跳出循环 
  29   1        {
  30   2          UART_SendData(*pbuf);
  31   2          delay_10us(5);
  32   2          pbuf++; 
  33   2        }
  34   1        delay_10us(5);
  35   1        UART_SendData('\r');//回车
  36   1        delay_10us(5);
  37   1        UART_SendData('\n');//换行
  38   1        delay_ms(10);
  39   1      }
  40          
  41          //ESP8266-WIFI模块工作模式初始化
  42          void ESP8266_ModeInit(void)
  43          {
  44   1        ESP8266_SendCmd("AT+CWMODE=2");//设置路由器模式 1 staTIon模式 2 AP点 路由器模式 3 station+AP混合模式
  45   1        ESP8266_SendCmd("AT+CWSAP=\"ESP8266\",\"123456\",11,0"); //设置WIFI热点名及密码
  46   1        ESP8266_SendCmd("AT+CIPAP=\"192.168.4.1\"");
  47   1        ESP8266_SendCmd("AT+RST");//重新启动wifi模块
  48   1        delay_ms(2000);
  49   1        ESP8266_SendCmd("AT+CIPMUX=1"); //开启多连接模式，允许多个各客户端接入
  50   1        ESP8266_SendCmd("AT+CIPSERVER=1,8080"); //启动TCP/IP 端口为8080 实现基于网络控制  
  51   1      } 
  52          
  53          
  54          ////WIFI控制
C51 COMPILER V9.56.0.0   WIFI_CONTROL                                                      06/02/2022 20:06:44 PAGE 2   

  55          //void wifi_control(void)
  56          //{
  57          //  u16 i=0;
  58          //  u8 temp_buf[5];
  59          //  int temp_value;
  60          //  u8 wifi_send_buf[7];
  61          
  62          //  while(1)
  63          //  {
  64          //    i++;
  65          //    if(i%50==0)//间隔一段时间读取温度值，间隔时间要大于温度传感器转换温度时间
  66          //      temp_value=read_temp()*10;//保留温度值小数后一位
  67          //    if(temp_value<0)//负温度
  68          //    {
  69          //      temp_value=-temp_value;
  70          //      temp_buf[0]=0x40;//显示负号
  71          //      wifi_send_buf[0]='-'; 
  72          //    }
  73          //    else
  74          //    {
  75          //      temp_buf[0]=0x00;//不显示
  76          //      wifi_send_buf[0]='+';
  77          //    }   
  78          //    temp_buf[1]=gsmg_code[temp_value/1000];//百位
  79          //    temp_buf[2]=gsmg_code[temp_value%1000/100];//十位
  80          //    temp_buf[3]=gsmg_code[temp_value%1000%100/10]|0x80;//个位+小数点
  81          //    temp_buf[4]=gsmg_code[temp_value%1000%100%10];//小数点后一位
  82          //    smg_display(temp_buf,4);
  83          //    if(i%200==0)//间隔一段时间将读取的温度发送到APP
  84          //    {
  85          //      wifi_send_buf[1]=temp_value/1000+0x30;
  86          //      wifi_send_buf[2]=temp_value%1000/100+0x30;
  87          //      wifi_send_buf[3]=temp_value%1000%100/10+0x30;
  88          //      wifi_send_buf[4]='.';
  89          //      wifi_send_buf[5]=temp_value%1000%100%10+0x30;
  90          //      wifi_send_buf[6]='\0';
  91          //      ESP8266_SendData(wifi_send_buf);//通过串口发送温度数据到APP
  92          //    }     
  93          //  } 
  94          //}
  95          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =    123    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
