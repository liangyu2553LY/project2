C51 COMPILER V9.56.0.0   WIFI_CONTROL                                                      03/28/2022 21:43:37 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE WIFI_CONTROL
OBJECT MODULE PLACED IN .\Obj\wifi_control.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE App_Demo\wifi_control.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App\i
                    -ic;.\App\key;.\App\smg;.\Public;.\App\ds18b20;.\App_Demo) DEBUG OBJECTEXTEND PRINT(.\Obj\wifi_control.lst) TABS(2) OBJEC
                    -T(.\Obj\wifi_control.obj)

line level    source

   1          /*
   2          作者：嗨小易（QQ：3443792007）
   3          版权：本教程版权归嗨小易（QQ：3443792007）所有，未经授权不得转载、摘编或用于其他商业用途！！！
   4              一经发现，后果自负！！！
   5          */
   6          
   7          #include "wifi_control.h"
   8          #include "ds18b20.h"
   9          #include "uart.h"
  10          #include "smg.h"
  11          
  12          //定义LED1管脚
  13          sbit LED1=P2^0;
  14          
  15          //定义WIFI控制命令
  16          #define LED1_ON_CMD     '1'
  17          #define LED1_OFF_CMD    '2'
  18          
  19          
  20          //ESP8266 WIFI发送AT指令
  21          //pbuf：AT指令，字符串格式，如："AT"
  22          void ESP8266_SendCmd(u8 *pbuf)
  23          {
  24   1        while(*pbuf!='\0') //遇到空格跳出循环 
  25   1        {
  26   2          UART_SendData(*pbuf);
  27   2          delay_10us(5);
  28   2          pbuf++; 
  29   2        }
  30   1        delay_10us(5);
  31   1        UART_SendData('\r');//回车
  32   1        delay_10us(5);
  33   1        UART_SendData('\n');//换行
  34   1        delay_ms(10);
  35   1      }
  36          
  37          //ESP8266 WIFI发送数据到APP
  38          //pbuf：数据
  39          void ESP8266_SendData(u8 *pbuf)
  40          {
  41   1        ESP8266_SendCmd("AT+CIPSEND=0,7");
  42   1        delay_ms(10);
  43   1        while(*pbuf!='\0') //遇到空格跳出循环 
  44   1        {
  45   2          UART_SendData(*pbuf);
  46   2          delay_10us(5);
  47   2          pbuf++; 
  48   2        }
  49   1        UART_SendData('\n');//换行  
  50   1      //  delay_ms(10);
  51   1      }
  52          
  53          //ESP8266-WIFI模块工作模式初始化
C51 COMPILER V9.56.0.0   WIFI_CONTROL                                                      03/28/2022 21:43:37 PAGE 2   

  54          void ESP8266_ModeInit(void)
  55          {
  56   1        ESP8266_SendCmd("AT+CWMODE=2");//设置路由器模式 1 staTIon模式 2 AP点 路由器模式 3 station+AP混合模式
  57   1        ESP8266_SendCmd("AT+CWSAP=\"ESP8266\",\"123456\",11,0"); //设置WIFI热点名及密码
  58   1        ESP8266_SendCmd("AT+CIPAP=\"192.168.4.1\"");
  59   1        ESP8266_SendCmd("AT+RST");//重新启动wifi模块
  60   1        delay_ms(2000);
  61   1        ESP8266_SendCmd("AT+CIPMUX=1"); //开启多连接模式，允许多个各客户端接入
  62   1        ESP8266_SendCmd("AT+CIPSERVER=1,8080"); //启动TCP/IP 端口为8080 实现基于网络控制  
  63   1      } 
  64          
  65          //WIFI控制初始化
  66          void wifi_control_init(void)
  67          {
  68   1        UART_Init();
  69   1        ds18b20_init();//初始化DS18B20
  70   1        ESP8266_ModeInit();
  71   1        ES=1;//允许串口中断
  72   1      }
  73          
  74          //WIFI控制
  75          void wifi_control(void)
  76          {
  77   1        u16 i=0;
  78   1        u8 temp_buf[5];
  79   1        int temp_value;
  80   1        u8 wifi_send_buf[7];
  81   1      
  82   1        while(1)
  83   1        {
  84   2          i++;
  85   2          if(i%50==0)//间隔一段时间读取温度值，间隔时间要大于温度传感器转换温度时间
  86   2            temp_value=ds18b20_read_temperture()*10;//保留温度值小数后一位
  87   2          if(temp_value<0)//负温度
  88   2          {
  89   3            temp_value=-temp_value;
  90   3            temp_buf[0]=0x40;//显示负号
  91   3            wifi_send_buf[0]='-'; 
  92   3          }
  93   2          else
  94   2          {
  95   3            temp_buf[0]=0x00;//不显示
  96   3            wifi_send_buf[0]='+';
  97   3          }   
  98   2          temp_buf[1]=gsmg_code[temp_value/1000];//百位
  99   2          temp_buf[2]=gsmg_code[temp_value%1000/100];//十位
 100   2          temp_buf[3]=gsmg_code[temp_value%1000%100/10]|0x80;//个位+小数点
 101   2          temp_buf[4]=gsmg_code[temp_value%1000%100%10];//小数点后一位
 102   2          smg_display(temp_buf,4);
 103   2          if(i%200==0)//间隔一段时间将读取的温度发送到APP
 104   2          {
 105   3            wifi_send_buf[1]=temp_value/1000+0x30;
 106   3            wifi_send_buf[2]=temp_value%1000/100+0x30;
 107   3            wifi_send_buf[3]=temp_value%1000%100/10+0x30;
 108   3            wifi_send_buf[4]='.';
 109   3            wifi_send_buf[5]=temp_value%1000%100%10+0x30;
 110   3            wifi_send_buf[6]='\0';
 111   3            ESP8266_SendData(wifi_send_buf);//通过串口发送温度数据到APP
 112   3          }     
 113   2        } 
 114   1      }
 115          
C51 COMPILER V9.56.0.0   WIFI_CONTROL                                                      03/28/2022 21:43:37 PAGE 3   

 116          //串口中断服务函数
 117          //接收手机APP发送的信号后控制板载资源
 118          void UART_IRQn() interrupt 4
 119          {
 120   1        static u8 i=0;
 121   1      
 122   1        if(RI)
 123   1        {
 124   2          RI=0;
 125   2          UART_RX_BUF[i]=SBUF;//读取接收到的数据
 126   2          if(UART_RX_BUF[0]=='+')i++;
 127   2          else i=0;
 128   2          if(i==10)
 129   2          {
 130   3            i=0;
 131   3            //WIFI控制
 132   3            if(UART_RX_BUF[9]==LED1_ON_CMD)
 133   3              LED1=0;
 134   3            else if(UART_RX_BUF[9]==LED1_OFF_CMD)
 135   3              LED1=1;   
 136   3          }     
 137   2        } 
 138   1      }
 139          
 140          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    596    ----
   CONSTANT SIZE    =    122    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
